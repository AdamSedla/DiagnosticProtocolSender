{
  "version": 3,
  "sources": ["../../tauri-plugin-htmx/tauri-plugin-htmx.js"],
  "sourcesContent": ["const { invoke } = window.__TAURI__.core;\n\nconst COMMAND_PREFIX = \"command:\";\n\nconst patchedSend = async function (params) {\n    // Make readonly properties writable\n    Object.defineProperty(this, \"readyState\", {writable: true})\n    Object.defineProperty(this, \"status\", {writable: true})\n    Object.defineProperty(this, \"statusText\", {writable: true})\n    Object.defineProperty(this, \"response\", {writable: true})\n\n    // Set response\n    const query = new URLSearchParams(params);\n    this.response = await invoke(this.command, Object.fromEntries(query));\n    this.readyState = XMLHttpRequest.DONE;\n    this.status = 200;\n    this.statusText = \"OK\";\n\n    // We only need load event to trigger a XHR response\n    this.dispatchEvent(new ProgressEvent(\"load\"));\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    document.body.addEventListener('htmx:beforeSend', (event) => {\n        const path = event.detail.requestConfig.path;\n        if (path.startsWith(COMMAND_PREFIX)) {\n            event.detail.xhr.command = path.slice(COMMAND_PREFIX.length);\n            event.detail.xhr.send = patchedSend;\n        }\n    });\n});\n"],
  "mappings": ";AAAA,IAAM,EAAE,OAAO,IAAI,OAAO,UAAU;AAEpC,IAAM,iBAAiB;AAEvB,IAAM,cAAc,eAAgB,QAAQ;AAExC,SAAO,eAAe,MAAM,cAAc,EAAC,UAAU,KAAI,CAAC;AAC1D,SAAO,eAAe,MAAM,UAAU,EAAC,UAAU,KAAI,CAAC;AACtD,SAAO,eAAe,MAAM,cAAc,EAAC,UAAU,KAAI,CAAC;AAC1D,SAAO,eAAe,MAAM,YAAY,EAAC,UAAU,KAAI,CAAC;AAGxD,QAAM,QAAQ,IAAI,gBAAgB,MAAM;AACxC,OAAK,WAAW,MAAM,OAAO,KAAK,SAAS,OAAO,YAAY,KAAK,CAAC;AACpE,OAAK,aAAa,eAAe;AACjC,OAAK,SAAS;AACd,OAAK,aAAa;AAGlB,OAAK,cAAc,IAAI,cAAc,MAAM,CAAC;AAChD;AAEA,OAAO,iBAAiB,oBAAoB,MAAM;AAC9C,WAAS,KAAK,iBAAiB,mBAAmB,CAAC,UAAU;AACzD,UAAM,OAAO,MAAM,OAAO,cAAc;AACxC,QAAI,KAAK,WAAW,cAAc,GAAG;AACjC,YAAM,OAAO,IAAI,UAAU,KAAK,MAAM,eAAe,MAAM;AAC3D,YAAM,OAAO,IAAI,OAAO;AAAA,IAC5B;AAAA,EACJ,CAAC;AACL,CAAC;",
  "names": []
}
